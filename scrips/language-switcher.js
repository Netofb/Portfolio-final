// Objeto com todas as traduÃ§Ãµes
const translations = {
    pt: {
        about:"Sobre mim",
        projects:"Projetos",
        skills:"Habilidades",
        intro: "FÃ¡bio design & Desenvolvedor front end. Localizado em Recife/Pe ðŸ¦¦",
        phrase:"Se o caminho para o que vocÃª quer, parece muito fÃ¡cil, entÃ£o vocÃª estÃ¡ no caminho errado.",
        copy: "Â© Copyright 2025. Feito por FÃ¡bio.",
        profile:"Sou um profissional de TI em transiÃ§Ã£o para Desenvolvimento Full-Stack, combinando experiÃªncia em suporte tÃ©cnico com habilidades sÃ³lidas em programaÃ§Ã£o. Minha jornada na Ã¡rea me ensinou a resolver problemas de forma criativa e eficiente, e agora estou direcionando essa capacidade para construir soluÃ§Ãµes robustas por meio do cÃ³digo. Tenho conhecimentos em: Front-end: React, JavaScript, Sass, Tailwind CSS e Bootstrap Back-end: PHP e Python para lÃ³gica e integraÃ§Ãµes Banco de dados: PostgreSQL, MongoDB e SQLite AlÃ©m disso, me mantenho em constante aprendizado, explorando novas tecnologias e frameworks para expandir meu conhecimento e entregar projetos cada vez mais eficientes.",
        
        },
    en: {
        
        about:"About me",
        projects:"projects",
        skills:"skills",
        intro: "FÃ¡bio design & Developer frontend. Located in Recife/Pe ðŸ¦¦",
        phrase:"If the path to what you want seems too easy, then you are on the wrong path.",
        copy: "Â© Copyright 2025. Made by FÃ¡bio.",
        profile:"I'm an IT professional transitioning into Full-Stack Development, combining my technical support experience with solid programming skills. My journey in this field has taught me to solve problems creatively and efficiently, and I'm now focusing this ability on building robust solutions through code. My skills include: Front-end: React, JavaScript, Sass, Tailwind CSS and Bootstrap; Back-end: PHP and Python for logic and integrations; Databases: PostgreSQL, MongoDB and SQLite. Additionally, I'm constantly learning, exploring new technologies and frameworks to expand my knowledge and deliver increasingly efficient projects.",
        
    }
};

// FunÃ§Ã£o para carregar o idioma salvo ou usar o padrÃ£o
function loadLanguage() {
    const savedLanguage = localStorage.getItem('portfolioLanguage');
    return savedLanguage || 'pt'; // Idioma padrÃ£o: portuguÃªs
}

// FunÃ§Ã£o para aplicar as traduÃ§Ãµes
function applyTranslations(lang) {
    const elements = document.querySelectorAll('[data-i18n]');
    
    elements.forEach(element => {
        const key = element.getAttribute('data-i18n');
        if (translations[lang] && translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
    
    // Atualiza o atributo lang do HTML
    document.documentElement.lang = lang;
    
    // Atualiza o texto do botÃ£o
    const toggleBtn = document.getElementById('languageToggle');
    if (toggleBtn) {
        toggleBtn.textContent = lang === 'pt' ? 'EN' : 'PT';
    }
}

// FunÃ§Ã£o para trocar o idioma
function toggleLanguage() {
    const currentLang = loadLanguage();
    const newLang = currentLang === 'pt' ? 'en' : 'pt';
    
    localStorage.setItem('portfolioLanguage', newLang);
    applyTranslations(newLang);
}

// InicializaÃ§Ã£o
document.addEventListener('DOMContentLoaded', () => {
    // Carrega o idioma salvo
    const currentLang = loadLanguage();
    applyTranslations(currentLang);
    
    // Configura o evento do botÃ£o
    const toggleBtn = document.getElementById('languageToggle');
    if (toggleBtn) {
        toggleBtn.addEventListener('click', toggleLanguage);
    }
});


// FunÃ§Ã£o para aplicar as traduÃ§Ãµes com animaÃ§Ã£o
function applyTranslations(lang) {
    const elements = document.querySelectorAll('[data-i18n]');
    
    // Fade out
    elements.forEach(element => {
        element.classList.add('fade-out');
    });
    
    // Espera a animaÃ§Ã£o terminar antes de mudar o texto
    setTimeout(() => {
        elements.forEach(element => {
            const key = element.getAttribute('data-i18n');
            if (translations[lang] && translations[lang][key]) {
                element.textContent = translations[lang][key];
            }
            element.classList.remove('fade-out');
            element.classList.add('fade-in');
        });
        
        // Remove a classe fade-in apÃ³s a animaÃ§Ã£o
        setTimeout(() => {
            elements.forEach(element => {
                element.classList.remove('fade-in');
            });
        }, 300);
    }, 300);
    
    document.documentElement.lang = lang;
    
    const toggleBtn = document.getElementById('languageToggle');
    if (toggleBtn) {
        toggleBtn.textContent = lang === 'pt' ? 'EN' : 'PT';
    }
}